The ''2-matrix_divided'' module
--------------------------------
---------------------------------------


using ''matrix_divided''
--------------------------
# Importing the module

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# testing the default case
	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Unequal row test case
	>>> matrix = [
	...	[1, 2],
	...	[4, 5, 6]
	... ]

	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

# div Equal zero test case
	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	... ]

	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

# list of list test case: this is just a normal list
	>>> matrix = [
	...	1, 2, 3,
	...	4, 5, 6
	... ]

	>>> matrix_divided(matrix, 3) #doctest: +NORMALIZE_WHITESPACE
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

# list of list without any value test case
	>>> matrix = [[]]

	>>> matrix_divided(matrix, 3)
	[[]]

# list with a string element test case
	>>> matrix = [
	...	[1, 2, 3],
	...	[4, "ALx", 6]
	... ]

	>>> matrix_divided(matrix, 3) #doctest: +NORMALIZE_WHITESPACE
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
